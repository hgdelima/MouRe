#comments
	Author:	Reza Moussavi
	Date:	14/07/2011
	Ver:	0.1

#biz
	transaction:transaction

#db
	history('TID' INT NOT NULL AUTO_INCREMENT; 'UID' INT NOT NULL; 'date' VARCHAR( 10 ) NOT NULL; 'type' VARCHAR( 50 ) NOT NULL; 'amount' FLOAT NOT NULL; 'comments' TEXT NOT NULL; 'txn_id' VARCHAR( 100 ) NOT NULL; PRIMARY KEY (  'TID' ))

#db-comment
	'TID' INT NOT NULL AUTO_INCREMENT ;
	'UID' INT NOT NULL ;
	'date' VARCHAR( 10 ) NOT NULL ;
	'type' VARCHAR( 50 ) NOT NULL ;
	'amount' FLOAT NOT NULL ;
	'comments' TEXT NOT NULL ;
	'txn_id' VARCHAR( 100 ) NOT NULL ;
	PRIMARY KEY (  'TID' )

#phpfunction

	/*************************************
	*	APIs
	*************************************/

	function backAll(){
		$UID=osBackUserID();
		$q="SELECT * FROM #db->history WHERE UID=".$UID." ORDER BY TID DESC";
		query($q);
		$html="<table border='1'>";
		$html.="<tr><th>TransactionID</th><th>date</th><th>type</th><th>amount</th><th>comments</th></tr>";
		while($row=fetch()){
			$html.="<tr>";
			$html.="<td>".$row['TID']."</td><td>".$row['date']."</td><td>".$row['type']."</td><td>".$row['amount']."</td><td>".$row['comments']."</td>";
			$html.="</tr>";
		}
		$html.="</table>";
		return $html;
	}

	function bookWithdraw($amount,$comments){
		#fun->INSERT(osBackUserID(),date("Y/m/d"),"Withdraw",$amount,$comments);
	}

	function bookCharge($amount,$comments){
		#fun->INSERT(osBackUserID(),date("Y/m/d"),"Charge",$amount,$comments);
	}

	function bookAdPay($amount,$comments){
		#fun->INSERT(osBackUserID(),date("Y/m/d"),"adPay",-$amount,$comments);
	}

	function bookReimburse($amount,$comments){
		#fun->INSERT(osBackUserID(),date("Y/m/d"),"Reimburse",$amount,$comments);
	}

	function backBalance($UID){
		$earned=0;
		query("SELECT SUM(PPV * totalView) as earned FROM publink_info WHERE publisher=".$UID);
		if($row=fetch()){$earned=sprintf("%.2f",$row['earned']);}

		$trans=0;
		query("SELECT SUM(amount) as trans FROM #db->history WHERE UID=".$UID);
		if($row=fetch()){
			$trans=$row['trans'];
		}
		return sprintf("%.2f",$trans+$earned);
	}

	function backUserSummary($UID){
		#fun->calcReimburse($UID);
		$ret=array("Balance"=>0,"Charge"=>0,"Earn"=>0,"Reimburse"=>0,"Withdrawn"=>0,"adPay"=>0);

		/*  Earned  */
		query("SELECT SUM(PPV * totalView) as earned FROM publink_info WHERE publisher=".$UID);
		if($row=fetch()){$ret['Earn']=sprintf("%.2f",$row['earned']);}

		/*  Withdrawn  */
		query("SELECT SUM(amount) as withdrawn FROM #db->history WHERE type='Withdraw' AND UID=".$UID);
		if($row=fetch()){$ret['Withdrawn']=sprintf("%.2f",$row['withdrawn']);}

		/*  Deposit  */
		query("SELECT SUM(amount) as total FROM #db->history WHERE UID=".$UID." AND type='Charge'");
		if($row=fetch()){$ret['Charge']=sprintf("%.2f",$row['total']);}

		/*  adPay  */
		query("SELECT SUM(amount) as total FROM #db->history WHERE UID=".$UID." AND type='adPay'");
		if($row=fetch()){$ret['adPay']=sprintf("%.2f",$row['total']);}

		/*  Reimburse  */
		query("SELECT SUM(amount) as total FROM #db->history WHERE UID=".$UID." AND type='Reimburse'");
		if($row=fetch()){$ret['Reimburse']=sprintf("%.2f",$row['total']);}

		$ret['Balance']=$ret['Earn']+$ret['Charge']+$ret['adPay']+$ret['Withdrawn']+$ret['Reimburse'];

		osBroadcast(#msg->update,array("balance"=>$ret['Balance']));
		return $ret;
	}

	function calcReimburse($UID){
		while(1){
			query("SELECT * FROM adlink_info WHERE advertisor=$UID AND running=0 AND reimbursed=0 AND maxViews>viewed");
			if(!($row=fetch())) return;
			$re=($row['maxViews']-$row['viewed'])*$row['AOPV'];
			query("UPDATE adlink_info SET reimbursed=".$re." WHERE adUID=".$row['adUID']);
			#fun->INSERTonly($UID,$row['lastDate'],"Reimburse",$re,"Paid ".$row['paid']." for ".$row['maxViews']."(each ".$row['AOPV'].") But viewed ".$row['viewed']." times.");
		}
	}

	/*************************************
	*	INTERNAL FUNCTIONS
	*************************************/

	function INSERTonly($UID,$date,$type,$amount,$comments){
		$s="INSERT INTO #db->history (UID,date,type,amount,comments) ";
		$s.=" VALUE ('$UID','$date','$type','$amount','$comments');";
		query($s);
	}

	function INSERT($UID,$date,$type,$amount,$comments){
		#fun->INSERTonly($UID,$date,$type,$amount,$comments);
		#fun->backUserSummary(osBackUserID());
	}

