
Sections brief description:
---------------------------
	each section start with # sign at the begining of the line following by section name and 'enter' followed by section name.
	you can put any section name to put your comments or temporary codes there.
	unknown sections will be skipped by compiler.
	valid section names are:

		biz:		name of the biz
		node:		other bizes used in this biz
		var:		variables
		start:		name of a function which will be called once as constructor
		message:	messages and their callback functions
		frame:		name of functions responsible for showing frames/views
		phpfunction:functions go here



Sections Instruction:
---------------------
	node:
			each node seperates with comma, no need any comma or semicolon at the end (except 'enter')
		alternatives:
			bizname nodename, bizname nodename[], bizname[] nodename

	var:
			variable names , no type, possibility to initialize.
		alternatives:
			varname, varname=initVal

	start:
			only one word, a constructur function name, a function with the same name should be implemented in phpfunction section
			starter function accept no arguments and return void.

	message:
			mention any message this biz interfere with. either mesages used by this biz or messages will send to this biz as a brodcast message
			you need to provide a function in phpfunction section to be triggered for each message this biz interested in listening to that.
		alternatives:
			messagename, messagename -> callback_function_name

	frame:
			show time! for each possible view that this biz gonna show, there should be a function to show that,
			here you should mention different function names which are going to be called to show different Views.
			to put a start behind function name you make that frame the default frame.
			functions which will be implemented for each frame, accept no argument and return an html as a string.
			*inside frame functions use single qoute and no double qoute for generating output html string*
		alternatives:
			frameName, *frameName

	phpfunction:
			collection of phpfunction. in this section there are only php functions and the code inside them is purely php except:
			- variables:	#var.xxx=5;  $a=var.xxx;
			- nodes:		#node.xxx->yyy=5; $p=#node.xxx->yyy; $s=#node.xxx->fff(2,"MD5");
			- functions:	#fun.fff();	$s=#fun.fff($i,#var.name);
			- database:		query("SELECT * FROM #db.info as i WHERE i.UID='" . #var.UID . "'");
							while($row=fetch()){ #var.name=$row['name']; ....
			- HTML/frame:	$formname='xxx';
							$html='	<br>
										<FORM name='.$formname.' method="post">
											<#msg.click>
											...
											<input value ="Login" type = "button" onclick = \'JavaScript:sndmsg("'. $formname .'")\' />
										</FORM>
									<hr>';
							return $html;
			- show frame:	everywhere by calling this fun u can change the frame and show it immediately : _bookframe(#frame.LoginFrame);
							calling this function (_bookframe) usually is the last line of code that u invoke in a biz
							because all codes who will be executed after this call will not affect on the view/frame
							if u want to get a node frame to insert in your html code for frame u need to call its _backframe function
							example: #node.myImage->_backframe() // it will return a string containing the whole current frame of that node
			- #nodeID:		this tag represent unique ID of current node.
			- send msg:		to broadcast a message : osBroadcast(#msg.logedIn,array("type"=>#var.type , "name"=>#node.user->name));
			- recv msg:		callback functions which has been mentioned in #message section should accept on argument which is an array












